import Image from "next/image";
import { useState } from "react";
import { useForm } from "react-hook-form";
import { addDoc, doc, collection, setDoc, serverTimestamp } from "firebase/firestore";
import storage, { db } from "../../firebasemain/Firebase";
import { ref, uploadBytesResumable, getDownloadURL } from "firebase/storage";
import PostSec from "./PostSec";

const MainContent = () => {
    const removeImg = () => {
        setImgData(null)
        setPicture(null)
    }

    const [picture, setPicture] = useState()
    const [imgData, setImgData] = useState()
    const imagesPreview = (e) => {
        if (e.target.files[0]) {
            setPicture(e.target.files[0])
            const reader = new FileReader()
            reader.readAsDataURL(e.target.files[0])
            reader.addEventListener("load", () => {
                setImgData(reader.result)
            })
        }
    }


    const { register, handleSubmit, reset, formState: { errors } } = useForm();

    // sending data in Firestore

    const onSubmit = async (fData) => {
        if (picture === null) {
            alert("Please upload an image first!");
            return
        }
        // uploading image to firebase storage || imported from storage

        const storageRef = ref(storage, `/postImages/${picture.name}`);
        // progress can be paused and resumed. It also exposes progress updates.
        // Receives the storage reference and the file to upload.
        const uploadTask = uploadBytesResumable(storageRef, picture);

        uploadTask.on(
            "state_changed",
            (snapshot) => {
                const percent = Math.round(
                    (snapshot.bytesTransferred / snapshot.totalBytes) * 100
                );
            },
            (err) => console.log(err),
            () => {
                getDownloadURL(uploadTask.snapshot.ref).then(async (url) => {
                    // sending to firestore db || url is generated by firebase db
                    await addDoc(collection(db, 'posts'), {
                        message: fData.example,
                        imageUrl: url,
                        timeStamp: serverTimestamp(),
                    });
                    // after uploading to firestore setting to null
                    setImgData(null)
                    setPicture(null)
                    reset({ example: "" });
                    console.log("done ustad");
                });
            });

    }

    return (
        <div className="col-span-4">
            <div className="containerMain">
                <div className="fbBox">
                    <form className="border-b-2 pb-3" onSubmit={handleSubmit(onSubmit)}>
                        <div className="flex mb-2">
                            <Image src="/images/fb.png" width={40} height={40} alt="" />
                            &nbsp;
                            <input type="text" placeholder="Type Something..." className="inputFields"  {...register("example", { required: true })} />
                            &nbsp;
                            {imgData ?
                                <div className="addingX" onClick={removeImg}>
                                    <Image src={imgData} width={37} height={37} alt="" />
                                </div>
                                :
                                <>
                                </>
                            }
                        </div>
                        {imgData && <input className="border button" type="submit" />}
                        
                    </form>
                    <div className="grid grid-cols-3 mt-4">
                        <div className="flex items-center justify-center">
                            <Image src='/images/video-player.png' width={20} height={20} alt="" />
                            <span className="font-medium text-sm">Video Player</span>
                        </div>
                        <div className="flex">
                            <input type="file" onChange={imagesPreview} />
                        </div>
                        <div className="flex items-center justify-center">
                            <Image src='/images/sidebar/calendar.png' width={20} height={20} alt="" />
                            <span className="font-medium text-sm">Feeling Lucky</span>
                        </div>
                    </div>
                </div>
            </div>
            <PostSec />
        </div>
    );
}

export default MainContent;